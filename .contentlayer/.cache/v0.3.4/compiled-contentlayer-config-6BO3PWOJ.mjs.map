{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\nimport rehypePrettyCode from 'rehype-pretty-code';\r\nimport remarkGfm from 'remark-gfm';\r\n\r\nexport const Blog = defineDocumentType(() => ({\r\n    name: 'Blog',\r\n    filePathPattern: `blog/**/*.mdx`,\r\n    contentType: 'mdx',\r\n    fields: {\r\n        title: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        date: {\r\n            type: 'date',\r\n            required: true,\r\n        },\r\n        lastUpdated: { type: 'date', required: false },\r\n        image: {\r\n            type: 'string',\r\n            required: false,\r\n        },\r\n        author: {\r\n            type: 'string',\r\n            required: true,\r\n        },\r\n        tags: {\r\n            type: 'list',\r\n            of: { type: 'string' },\r\n            required: false,\r\n        },\r\n    },\r\n    computedFields: {\r\n        slug: {\r\n            type: 'string',\r\n            resolve: (doc) => doc._raw.flattenedPath.replace(/^blog\\//, ''),\r\n        },\r\n        url: {\r\n            type: 'string',\r\n            resolve: (post) => `/blog/${post._raw.flattenedPath.replace(/^blog\\//, '')}`,\r\n        },\r\n    },\r\n}));\r\n\r\nconst rehypePrettyCodeOptions = {\r\n    theme: 'github-dark',\r\n    onVisitLine(node: any) {\r\n        if (node.children.length === 0) {\r\n            node.children = [{ type: 'text', value: ' ' }];\r\n        }\r\n    },\r\n    onVisitHighlightedLine(node: any) {\r\n        node.properties.className.push('highlighted');\r\n    },\r\n    onVisitHighlightedWord(node: any) {\r\n        node.properties.className = ['word'];\r\n    },\r\n};\r\n\r\nexport default makeSource({\r\n    contentDirPath: 'content',\r\n    documentTypes: [Blog],\r\n    mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n            rehypeSlug,\r\n            // @ts-ignore \u5FFD\u7565rehypePrettyCode\u63D2\u4EF6\u7684\u7C7B\u578B\u4E0D\u5339\u914D\u95EE\u9898\r\n            [rehypePrettyCode, rehypePrettyCodeOptions],\r\n            [\r\n                rehypeAutolinkHeadings,\r\n                {\r\n                    properties: {\r\n                        className: ['anchor'],\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n    },\r\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,eAAe;AAEf,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IAC7C,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,WAAW,EAAE;AAAA,IAClE;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,SAAS,KAAK,KAAK,cAAc,QAAQ,WAAW,EAAE,CAAC;AAAA,IAC9E;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,0BAA0B;AAAA,EAC5B,OAAO;AAAA,EACP,YAAY,MAAW;AACnB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IACjD;AAAA,EACJ;AAAA,EACA,uBAAuB,MAAW;AAC9B,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAChD;AAAA,EACA,uBAAuB,MAAW;AAC9B,SAAK,WAAW,YAAY,CAAC,MAAM;AAAA,EACvC;AACJ;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA;AAAA,MAEA,CAAC,kBAAkB,uBAAuB;AAAA,MAC1C;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,QAAQ;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
