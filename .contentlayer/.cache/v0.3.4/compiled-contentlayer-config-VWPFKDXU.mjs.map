{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport remarkGfm from 'remark-gfm';\n\nexport const Blog = defineDocumentType(() => ({\n    name: 'Blog',\n    filePathPattern: `blog/**/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true,\n        },\n        description: {\n            type: 'string',\n            required: true,\n        },\n        date: {\n            type: 'date',\n            required: true,\n        },\n        lastUpdated: { type: 'date', required: false },\n        image: {\n            type: 'string',\n            required: false,\n        },\n        author: {\n            type: 'string',\n            required: true,\n        },\n        tags: {\n            type: 'list',\n            of: { type: 'string' },\n            required: false,\n        },\n    },\n    computedFields: {\n        slug: {\n            type: 'string',\n            resolve: (doc) => doc._raw.flattenedPath.replace(/^blog\\//, ''),\n        },\n        url: {\n            type: 'string',\n            resolve: (post) => `/blog/${post._raw.flattenedPath.replace(/^blog\\//, '')}`,\n        },\n    },\n}));\n\nconst rehypePrettyCodeOptions = {\n    theme: 'github-dark',\n    onVisitLine(node: any) {\n        if (node.children.length === 0) {\n            node.children = [{ type: 'text', value: ' ' }];\n        }\n    },\n    onVisitHighlightedLine(node: any) {\n        node.properties.className.push('highlighted');\n    },\n    onVisitHighlightedWord(node: any) {\n        node.properties.className = ['word'];\n    },\n};\n\nexport default makeSource({\n    contentDirPath: 'content',\n    documentTypes: [Blog],\n    mdx: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [\n            rehypeSlug,\n            // @ts-ignore \u5FFD\u7565rehypePrettyCode\u63D2\u4EF6\u7684\u7C7B\u578B\u4E0D\u5339\u914D\u95EE\u9898\n            [rehypePrettyCode, rehypePrettyCodeOptions],\n            [\n                rehypeAutolinkHeadings,\n                {\n                    properties: {\n                        className: ['anchor'],\n                    },\n                },\n            ],\n        ],\n    },\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,eAAe;AAEf,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IAC7C,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,WAAW,EAAE;AAAA,IAClE;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,SAAS,KAAK,KAAK,cAAc,QAAQ,WAAW,EAAE,CAAC;AAAA,IAC9E;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,0BAA0B;AAAA,EAC5B,OAAO;AAAA,EACP,YAAY,MAAW;AACnB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IACjD;AAAA,EACJ;AAAA,EACA,uBAAuB,MAAW;AAC9B,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAChD;AAAA,EACA,uBAAuB,MAAW;AAC9B,SAAK,WAAW,YAAY,CAAC,MAAM;AAAA,EACvC;AACJ;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA;AAAA,MAEA,CAAC,kBAAkB,uBAAuB;AAAA,MAC1C;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,QAAQ;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
